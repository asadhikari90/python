name: Sonarqube-Veracode linux Build for Python Project

on:
  push:
    branches:
      - main
 #  pull_request:1
   # types: [opened, synchronize, reopened]


jobs:
  build:
    name: Sonarqube-Veracode Testing
    runs-on: ubuntu-latest #Can be parametized if needed
    steps:

      - run: sudo apt-get update -y && sudo apt-get install curl -y
      - run: sudo apt-get install jq -y
      - run: sudo apt-get install -y zip
      # - run: sudo apt-get install libxrender1 libfontconfig libxext6 libc6 libxml2 -y

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17 #Can be parametized if needed

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x  #Can be parametized if needed

      - name : Installing Required Packages 
        run :  | 
             pip install --upgrade pip setuptools
             pip install pytest coverage
             pip install -r requirements.txt
             pip install veracode-api-signing
            


      - name : Run Code Test
        run : coverage run -m pytest ./*.py #Give test file Path.
        continue-on-error: true
             
      - name : Generate Coverage Report
        run: coverage xml -o coverage.xml

      - name: Create Project Properties file
        run: |
          touch sonar-project.properties
          echo "sonar.projectKey=testproj" > sonar-project.properties
          echo "sonar.python.coverage.reportPaths=coverage.xml" >> sonar-project.properties

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master 
        with:
          projectBaseDir: ./   #Enter Project path or repo here
        env:  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          #SONAR_ROOT_CERT: ${{ secrets.SONAR_QA_CERT }}
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #OPTIONAL
         #SONAR_ROOT_CERT: ${{ secrets.SONAR_QA_CERT }}


      - name: Veracode Scan
        run: |
          # Replace 'your_api_id' and 'your_api_key' with your Veracode API credentials
          VID: '${{ secrets.vid }}'
          VKEY: '${{ secrets.vkey }}'
          sandboxName: 'DemoSandbox'
          python -m veracode_api_wapper --VID "${{ secrets.VID }}" --VKEY "${{ secrets.VKEY }}" --file "$GITHUB_WORKSPACE/veracode-scan-target.zip" 
      - name: Wait for scan completion
        run: veracode scan --wait-for-results

      - name: Get scan results
        run: veracode scan --get-results

      - name: Fail if vulnerabilities found
        run: |
          result=$(veracode scan --get-results)
          if [[ $result == *"Vulnerabilities found"* ]]; then
            echo "Vulnerabilities found in Veracode scan. Please fix them."
            exit 1
